/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projetoescolar;

import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import projetoescolar.LoginPagina;

/**
 *
 * @author victor.marim
 */
public class AlterarEstudante extends javax.swing.JFrame {

    
    LocalDateTime dataHoraAtual = LocalDateTime.now();
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yy HH:mm");
        String datinha = dataHoraAtual.format(formato);
        
          String nomeGeral;
           String  admGeral;
           String  loginGeral;
   
    public AlterarEstudante() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton1.setEnabled(false);
        jLabel6 = new javax.swing.JLabel();
        admin = new javax.swing.JRadioButton();
        admin.setEnabled(false);  
        admin.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cadanome = new javax.swing.JTextField();
        cadalogin = new javax.swing.JTextField();
        cadalogin.setEnabled(false);
        cadasenha = new javax.swing.JPasswordField();
        cadasenha.setEnabled(false);
        cadasenha2 = new javax.swing.JPasswordField();
        cadasenha2.setEnabled(false);
        carregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(null);
        setResizable(false);
        setSize(new java.awt.Dimension(630, 490));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 34, 107));
        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(632, 490));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 153, 153));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText(datinha);
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, 225, 26));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 153, 153));
        jLabel8.setText(LoginPagina.nomi.toUpperCase());
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 225, 26));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Alterar Usuário");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 25, 612, -1));

        jButton1.setBackground(new java.awt.Color(248, 150, 55));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Confirmar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 323, 287, 83));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Cancelar");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 412, 287, -1));

        admin.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        admin.setForeground(new java.awt.Color(255, 255, 255));
        admin.setText("Administrador");
        admin.setContentAreaFilled(false);
        admin.setFocusPainted(false);
        admin.setFocusable(false);
        admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminActionPerformed(evt);
            }
        });
        jPanel1.add(admin, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 266, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Confirmação:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 222, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nova senha:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 184, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nome:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 146, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Login:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 108, -1, -1));

        cadanome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadanomeActionPerformed(evt);
            }
        });
        jPanel1.add(cadanome, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 112, 230, -1));
        jPanel1.add(cadalogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 150, 344, -1));
        jPanel1.add(cadasenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 188, 300, -1));
        jPanel1.add(cadasenha2, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 226, 299, -1));

        carregar.setBackground(new java.awt.Color(248, 150, 55));
        carregar.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        carregar.setForeground(new java.awt.Color(255, 255, 255));
        carregar.setText("Carregar");
        carregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarActionPerformed(evt);
            }
        });
        jPanel1.add(carregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 110, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 490));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

            int realizouAlteracao = 0;
            int trocouSenha = 0;
            
            try {
                //CONEXÃO COM BANCO E CONSULTA
                Class.forName("com.mysql.cj.jdbc.Driver");  // Driver atualizado
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/sistemafinanceiro", "root", "");
                Statement st = conn.createStatement();  // Sem necessidade de casting
                String sql = "SELECT * FROM usuario_login where usuario = '" + cadanome.getText().trim() + "'";
                ResultSet rs = st.executeQuery(sql);
                String adminSelecionado = "N";
                if (admin.isSelected()){
                    adminSelecionado = "S";
                }
                
                if (rs.next()){
                nomeGeral = rs.getString("nome_usuario");
                admGeral = rs.getString("is_admin");
                loginGeral = rs.getString("usuario");

                if ( nomeGeral.equals(cadalogin.getText()) &&
             adminSelecionado.equals(admGeral) &&
             cadasenha.getText().isEmpty() && cadasenha2.getText().isEmpty()){
                            JOptionPane.showMessageDialog(this, "Nenhuma alteração foi realizada!");
            }

                //TROCOU NOME?
                  if (!nomeGeral.equals(cadalogin.getText())){
                      realizouAlteracao = 1;
                  }
                //TROCOU ADM?
                  if (!admGeral.equals(adminSelecionado)){
                      realizouAlteracao = 1;
                  }
                //TROCOU SENHA?
                if ((cadasenha.getText().isEmpty() && !cadasenha2.getText().isEmpty()) || (cadasenha2.getText().isEmpty() && !cadasenha.getText().isEmpty())){
                JOptionPane.showMessageDialog(this, "Somente um dos campos da senha foi preenchido!");
                } else if (!cadasenha.getText().equals(cadasenha2.getText())){
                JOptionPane.showMessageDialog(this, "A senha e a confirmação de senha precisam ser iguais!");
                realizouAlteracao = 0;
                } else if (cadasenha.getText().equals(cadasenha2.getText()) && !(cadasenha.getText() == null || "".equals(cadasenha.getText()))){
                    realizouAlteracao = 1;
                    trocouSenha = 1;
                }
                
                String adminCheck;
                if (admin.isSelected()){
                 adminCheck = "S";
                        } else adminCheck = "N";
                
                if (realizouAlteracao == 1 && trocouSenha == 1){
                 sql = "UPDATE usuario_login SET nome_usuario = ?, senha = ?, is_admin = ? WHERE usuario = ?";
                PreparedStatement ptstmt = conn.prepareStatement(sql);
                ptstmt.setString(1, cadalogin.getText());   
                ptstmt.setString(2, cadasenha.getText());  
                ptstmt.setString(3, adminCheck);           
                ptstmt.setString(4, cadanome.getText());  // Condição para o WHERE (usuario)
                JOptionPane.showMessageDialog(null, "Usuário " + nomeGeral + " atualizado com sucesso!");
                ptstmt.executeUpdate(); 
                conn.close();
                cadasenha.setText(null);
                cadasenha2.setText(null);
                cadanome.setEnabled(true);
                carregar.setEnabled(true);
                cadalogin.setEnabled(false);
                cadasenha.setEnabled(false);
                cadasenha2.setEnabled(false);
                jButton1.setEnabled(false);
                admin.setEnabled(false);
                admin.setSelected(false);
                cadanome.setText("");
                cadalogin.setText("");
              if (LoginPagina.nomi.equals(loginGeral)){
              JOptionPane.showMessageDialog(null, "Próprio usuário alterado, necessário relogar.");
LoginPagina obj = new LoginPagina();
            obj.setVisible(true);
            dispose();
              }
                
                
                } else if (realizouAlteracao == 1){
                 sql = "UPDATE usuario_login SET nome_usuario = ?, is_admin = ? WHERE usuario = ?";
                PreparedStatement ptstmt = conn.prepareStatement(sql);
                ptstmt.setString(1, cadalogin.getText());   
                ptstmt.setString(2, adminCheck);           
                ptstmt.setString(3, cadanome.getText()); 
                JOptionPane.showMessageDialog(null, "Usuário " + nomeGeral + " atualizado com sucesso!");
                ptstmt.executeUpdate();
                conn.close();
                 cadanome.setEnabled(true);
                carregar.setEnabled(true);
                cadalogin.setEnabled(false);
                cadasenha.setEnabled(false);
                cadasenha2.setEnabled(false);
                jButton1.setEnabled(false);
                admin.setEnabled(false);
                admin.setSelected(false);
                cadanome.setText("");
                cadalogin.setText("");
                 if (LoginPagina.nomi.equals(loginGeral)){
              JOptionPane.showMessageDialog(null, "Próprio usuário alterado, necessário relogar.");
              LoginPagina obj = new LoginPagina();
            obj.setVisible(true);
            dispose();
              }
                }
            

                }//fim IF do rsnext
}//fim try//fim try
        catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Falha ao estabelecer conexão com o banco de dados");
            }
        
        
        
        
        
        
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked

        Cadastros obj = new Cadastros();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel6MouseClicked

    private void adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adminActionPerformed

    private void cadanomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadanomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cadanomeActionPerformed

    private void carregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarActionPerformed
        
        
        int inseriuUsuario = 0;
        int usuarioExiste = 0;
        //VALIDAÇÃO DE USUÁRIO PREENCHIDO
        
        if (cadanome.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "É necessário inserir um usuário!");
        } else inseriuUsuario = 1;
        
        
            try {
                
                //CONEXÃO COM BANCO E CONSULTA
                if (inseriuUsuario == 1){
                Class.forName("com.mysql.cj.jdbc.Driver");  // Driver atualizado
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/sistemafinanceiro", "root", "");
                Statement st = conn.createStatement();  // Sem necessidade de casting
                String sql = "SELECT * FROM usuario_login";
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {

                //Coletando dados do usuário inserido
        String username = rs.getString("usuario");
        String nome = rs.getString("nome_usuario");
        String adm = rs.getString("is_admin");
        if (cadanome.getText().equals(username)){
            nomeGeral = nome;
            admGeral = adm;
            loginGeral = username;
        cadanome.setEnabled(false);
        jButton1.setEnabled(true);
        carregar.setEnabled(false);
        cadalogin.setEnabled(true);
        cadalogin.setText(nome);
        if (adm.equals("S")){
            admin.setSelected(true);
        } 
        if (LoginPagina.eAdmin.equals("S")){
            admin.setEnabled(true);
            cadasenha.setEnabled(true);
            cadasenha2.setEnabled(true);
        }
        
        
        
            
usuarioExiste = 1;
}



}//fim while
                if (usuarioExiste != 1){
            JOptionPane.showMessageDialog(this, "Usuário não encontrado!");}




}//fim if
}//fim try
        catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Falha ao estabelecer conexão com o banco de dados");
            }    }//GEN-LAST:event_carregarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlterarEstudante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlterarEstudante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlterarEstudante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlterarEstudante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlterarEstudante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton admin;
    private javax.swing.JTextField cadalogin;
    private javax.swing.JTextField cadanome;
    private javax.swing.JPasswordField cadasenha;
    private javax.swing.JPasswordField cadasenha2;
    private javax.swing.JButton carregar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
