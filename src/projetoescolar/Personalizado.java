/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projetoescolar;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import projetoescolar.CadastrarEstudante;
import javax.swing.*;
import java.awt.*;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.ArrayList;
import projetoescolar.Geral.ProjecaoFinanceira;
import projetoescolar.utils.LimitaCaracteres;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author victor.marim
 */
public class Personalizado extends javax.swing.JFrame {

    //VISÃO SINTÉTICA:
    public static int sinteticPeriod;
        public static double sinteticAport;
        public static double sinteticValor;
          public static double sinteticJuros;
          public static double sinteticPatrimonio;


    
    
    
    LocalDateTime dataHoraAtual = LocalDateTime.now();
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yy HH:mm");
        DateTimeFormatter formato2 = DateTimeFormatter.ofPattern("MM/yy");

        String datinha = dataHoraAtual.format(formato);
        String datona = dataHoraAtual.format(formato2);
        
    public Personalizado() {
        initComponents();
        valor1.setDocument(new LimitaCaracteres(15, LimitaCaracteres.TipoEntrada.NUMERODECIMAL));
        taxa.setDocument(new LimitaCaracteres(15, LimitaCaracteres.TipoEntrada.NUMERODECIMAL));
        aporte.setDocument(new LimitaCaracteres(15, LimitaCaracteres.TipoEntrada.NUMERODECIMAL));
        periodo.setDocument(new LimitaCaracteres(6, LimitaCaracteres.TipoEntrada.NUMERODECIMAL));
        valor1.setText("9.999,99");
        taxa.setText("0.99");
        periodo.setText("99");
        aporte.setText("9.999,99");
        
     
    }
   public static ArrayList<ProjecaoFinanceira> projecaoCompleta = new ArrayList<>();
  
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        valor1 = new javax.swing.JTextField();

        valor1.setText("0,00");
        valor1.setForeground(Color.GRAY);

        valor1.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (valor1.getText().equals("9.999,99")) {
                    valor1.setText("");  // Limpa o campo quando o foco é recebido
                    valor1.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (valor1.getText().isEmpty()) {
                    valor1.setForeground(Color.GRAY);
                    valor1.setText("9.999,99");  // Recoloca o placeholder se o campo estiver vazio
                }
            }
        });

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        combo1 = new javax.swing.JComboBox<>();
        aporte = new javax.swing.JTextField();

        aporte.setText("0,00");
        aporte.setForeground(Color.GRAY);

        aporte.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (aporte.getText().equals("9.999,99")) {
                    aporte.setText("");  // Limpa o campo quando o foco é recebido
                    aporte.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (aporte.getText().isEmpty()) {
                    aporte.setForeground(Color.GRAY);
                    aporte.setText("9.999,99");  // Recoloca o placeholder se o campo estiver vazio
                }
            }
        });
        periodo = new javax.swing.JTextField();

        periodo.setText("99");
        periodo.setForeground(Color.GRAY);

        periodo.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (periodo.getText().equals("99")) {
                    periodo.setText("");  // Limpa o campo quando o foco é recebido
                    periodo.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (periodo.getText().isEmpty()) {
                    periodo.setForeground(Color.GRAY);
                    periodo.setText("99");  // Recoloca o placeholder se o campo estiver vazio
                }
            }
        });
        taxa = new javax.swing.JTextField();

        taxa.setText("0,00");
        taxa.setForeground(Color.GRAY);

        taxa.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (taxa.getText().equals("0.99")) {
                    taxa.setText("");  // Limpa o campo quando o foco é recebido
                    taxa.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (taxa.getText().isEmpty()) {
                    taxa.setForeground(Color.GRAY);
                    taxa.setText("0.99");  // Recoloca o placeholder se o campo estiver vazio
                }
            }
        });
        combo2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        resume = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 34, 107));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Simulador de juros compostos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 18, 630, -1));

        jPanel1.setBackground(new java.awt.Color(0, 34, 107));

        jTextField1.setBackground(new java.awt.Color(0, 34, 107));
        jTextField1.setForeground(new java.awt.Color(0, 34, 107));
        jTextField1.setBorder(null);

        valor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valor1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Retornar");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText(LoginPagina.nomi.toUpperCase() + " - " + datinha);

        jButton1.setBackground(new java.awt.Color(248, 150, 55));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 32)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Visão Gráfica");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Valor inicial:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Taxa de juros:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Aporte mensal:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Período:");

        combo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mensal", "Anual" }));
        combo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo1ActionPerformed(evt);
            }
        });

        combo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Meses", "Anos" }));
        combo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo2ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(248, 150, 55));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Limpar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        resume.setBackground(new java.awt.Color(248, 150, 55));
        resume.setFont(new java.awt.Font("Segoe UI", 1, 32)); // NOI18N
        resume.setForeground(new java.awt.Color(255, 255, 255));
        resume.setText("Resumo");
        resume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aporte, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(valor1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(periodo, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(taxa, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5))))
                .addContainerGap(32, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(resume, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(taxa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(periodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jButton2)
                .addGap(26, 26, 26)
                .addComponent(resume, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 490));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //BOTÃO LIMPAR
        if (!(valor1.getText().equals("9.999,99") &&
            taxa.getText().equals("0.99") &&
            periodo.getText().equals("99") &&
            aporte.getText().equals("9.999,99"))){
        valor1.setText("9.999,99");
        taxa.setText("0.99");
        periodo.setText("99");
        aporte.setText("9.999,99");
        valor1.setForeground(Color.GRAY);
        taxa.setForeground(Color.GRAY);
        periodo.setForeground(Color.GRAY);
        aporte.setForeground(Color.GRAY);

        }
        Personalizado.projecaoCompleta.clear();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void combo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo2ActionPerformed

    private void combo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int naoPreencheu = 0;

        if (valor1.getText().equals("9.999,99") &&
            taxa.getText().equals("0.99") &&
            periodo.getText().equals("99") &&
            aporte.getText().equals("9.999,99")){
            naoPreencheu = 1;
            JOptionPane.showMessageDialog(this, "Você deve preencher os campos!");
        }

        //VALIDANDO SE A TAXA E O PERÍODO SÃO MENSAIS OU ANUAIS -----------------------------
        String taxaMeses = combo1.getSelectedItem().toString();
        double mesesTaxa;
        String periodoMeses = combo2.getSelectedItem().toString();
        double mesesPeriodo;

        if (taxaMeses.equals("Mensal")) {
            mesesTaxa = 1.0;
        } else {
            mesesTaxa = 12.0;
        }

        if (periodoMeses.equals("Meses")) {
            mesesPeriodo = 1;
        } else   {
            mesesPeriodo = 12;
        }
        //-----------------------------------------------------------------------------------

        //Pegar os valores dos campos preenchidos:-------------------------------------------

        //ArrayList

        if (naoPreencheu != 1){
            //VARIÁVEIS GERAIS
            double valor = Double.valueOf(valor1.getText());
            double taxa = Double.valueOf(this.taxa.getText()) / mesesTaxa;
            double aporte = Double.valueOf(this.aporte.getText());
            double periodo =  (Double.valueOf(this.periodo.getText()) * mesesPeriodo);
            
            //variáveis cumulativas
            double totalAcumulado = 0;

            for (int i = 1; i<= (periodo); i++){

                //data
                LocalDateTime novaData = dataHoraAtual.plusMonths(i);
                String dataNova = novaData.format(formato2);

                for (int j = 0; j <= 2; j++) {

                    if (j == 0){
                        if (i == 1){
                            //taxa
                            double temporario = (valor * taxa) / 100;
                            ProjecaoFinanceira instanciando = new ProjecaoFinanceira(temporario,"Rendimento", dataNova);
                            projecaoCompleta.add(instanciando);

                            //PATRIMONIO
                            temporario = (valor) + (((valor) * taxa)/100);
                            instanciando = new ProjecaoFinanceira(temporario,"Patrimônio Total", dataNova);
                            projecaoCompleta.add(instanciando);
                            totalAcumulado = (valor) + (((valor ) * taxa)/100);
                        } else  {

                            //TAXA
                            double temporario = (totalAcumulado * taxa) / 100;
                            ProjecaoFinanceira instanciando = new ProjecaoFinanceira(temporario,"Rendimento", dataNova);
                            projecaoCompleta.add(instanciando);
                            //PATRIMONIO
                            instanciando = new ProjecaoFinanceira((((totalAcumulado) * taxa)/100) + (totalAcumulado + aporte),"Patrimônio Total", dataNova);
                            projecaoCompleta.add(instanciando);
                            totalAcumulado = (((totalAcumulado) * taxa)/100) + (totalAcumulado + aporte);
                        }
                    }

                    if (j == 1){
                        ProjecaoFinanceira instanciando = new ProjecaoFinanceira(aporte,"Aporte", dataNova);
                        projecaoCompleta.add(instanciando);}

                }

            }

        }
        
         double aporte = Double.parseDouble(this.aporte.getText());
for (int i = projecaoCompleta.size() - 1; i >= 0; i--) {
           ProjecaoFinanceira a = projecaoCompleta.get(i);
            if (a.getAporte().equals("Patrimônio Total")) {
                a.setValorTotal(a.getValorTotal() + aporte);
        break;
            }
        }        
        
        
        for (ProjecaoFinanceira projeta : projecaoCompleta){
            System.out.println(projeta.toString());

        }

        if(!projecaoCompleta.isEmpty()){
            LineChart chart = new LineChart();
            chart.teste();
        }

        //-----------------------------------------------------------------------------------

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked

        Investimentoss obj = new Investimentoss();
        obj.setVisible(true);
        dispose();

    }//GEN-LAST:event_jLabel2MouseClicked

    private void valor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valor1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valor1ActionPerformed

    private void resumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumeActionPerformed
 int naoPreencheu = 0;

        if (valor1.getText().equals("9.999,99") &&
            taxa.getText().equals("0.99") &&
            periodo.getText().equals("99") &&
            aporte.getText().equals("9.999,99")){
            naoPreencheu = 1;
            JOptionPane.showMessageDialog(this, "Você deve preencher os campos!");
        }

        //VALIDANDO SE A TAXA E O PERÍODO SÃO MENSAIS OU ANUAIS -----------------------------
        String taxaMeses = combo1.getSelectedItem().toString();
        double mesesTaxa;
        String periodoMeses = combo2.getSelectedItem().toString();
        double mesesPeriodo;

        if (taxaMeses.equals("Mensal")) {
            mesesTaxa = 1.0;
        } else {
            mesesTaxa = 12.0;
        }

        if (periodoMeses.equals("Meses")) {
            mesesPeriodo = 1;
        } else   {
            mesesPeriodo = 12;
        }
        //-----------------------------------------------------------------------------------

        //Pegar os valores dos campos preenchidos:-------------------------------------------

        //ArrayList

        if (naoPreencheu != 1){
            //VARIÁVEIS GERAIS
            double valor = Double.valueOf(valor1.getText());
            double taxa = Double.valueOf(this.taxa.getText()) / mesesTaxa;
            double aporte = Double.valueOf(this.aporte.getText());
            double periodo =  (Double.valueOf(this.periodo.getText()) * mesesPeriodo);
            sinteticPeriod = (int) periodo;
            sinteticAport = aporte;
            sinteticValor = valor;
            //variáveis cumulativas
            double totalAcumulado = 0;

            for (int i = 1; i<= (periodo); i++){

                //data
                LocalDateTime novaData = dataHoraAtual.plusMonths(i);
                String dataNova = novaData.format(formato2);

                for (int j = 0; j <= 2; j++) {

                    if (j == 0){
                        if (i == 1){
                            //taxa
                            double temporario = (valor * taxa) / 100;
                            ProjecaoFinanceira instanciando = new ProjecaoFinanceira(temporario,"Rendimento", dataNova);
                            projecaoCompleta.add(instanciando);

                            //PATRIMONIO
                            temporario = (valor) + (((valor) * taxa)/100);
                            instanciando = new ProjecaoFinanceira(temporario,"Patrimônio Total", dataNova);
                            projecaoCompleta.add(instanciando);
                            totalAcumulado = (valor) + (((valor ) * taxa)/100);
                        } else  {

                            //TAXA
                            double temporario = (totalAcumulado * taxa) / 100;
                            ProjecaoFinanceira instanciando = new ProjecaoFinanceira(temporario,"Rendimento", dataNova);
                            projecaoCompleta.add(instanciando);
                            //PATRIMONIO
                            instanciando = new ProjecaoFinanceira((((totalAcumulado) * taxa)/100) + (totalAcumulado + aporte),"Patrimônio Total", dataNova);
                            projecaoCompleta.add(instanciando);
                            totalAcumulado = (((totalAcumulado) * taxa)/100) + (totalAcumulado + aporte);
                        }
                    }

                    if (j == 1){
                        ProjecaoFinanceira instanciando = new ProjecaoFinanceira(aporte,"Aporte", dataNova);
                        projecaoCompleta.add(instanciando);}

                }

            }

        }

        for (ProjecaoFinanceira projeta : projecaoCompleta){
            System.out.println(projeta.toString());

        }
        
        double jurosTemporaria = 0.0;
        for (ProjecaoFinanceira juros : projecaoCompleta){
            if (juros.getAporte().equals("Rendimento")){
            jurosTemporaria += juros.getValorTotal();}
        } sinteticJuros = jurosTemporaria;
        
        double patrimonioTemporario = 0.0;
         for (ProjecaoFinanceira patri : projecaoCompleta){
            if (patri.getAporte().equals("Patrimônio Total")){
                if (patri.getValorTotal() > patrimonioTemporario){
            patrimonioTemporario = patri.getValorTotal();
                }
            }
        }
        sinteticPatrimonio = patrimonioTemporario + Personalizado.sinteticAport;
        

        if(!projecaoCompleta.isEmpty()){
           Sintética sintetic = new Sintética();
           sintetic.setVisible(true);
        }




    }//GEN-LAST:event_resumeActionPerformed

 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Personalizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Personalizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Personalizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Personalizado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Personalizado().setVisible(true);
            }
        });
        
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aporte;
    private javax.swing.JComboBox<String> combo1;
    private javax.swing.JComboBox<String> combo2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField periodo;
    private javax.swing.JButton resume;
    private javax.swing.JTextField taxa;
    private javax.swing.JTextField valor1;
    // End of variables declaration//GEN-END:variables
}
